apiVersion: apps/v1
kind: Deployment
metadata:
  name: xencode-app
  namespace: xencode
  labels:
    app: xencode
    component: api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: xencode
      component: api
  template:
    metadata:
      labels:
        app: xencode
        component: api
    spec:
      containers:
      - name: xencode-app
        image: xencode/app:latest
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: XENCODE_ENV
          value: "production"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: xencode-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: xencode-secrets
              key: redis-url
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: xencode-secrets
              key: jwt-secret
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: logs
          mountPath: /app/logs
        - name: data
          mountPath: /app/data
      volumes:
      - name: logs
        persistentVolumeClaim:
          claimName: xencode-logs-pvc
      - name: data
        persistentVolumeClaim:
          claimName: xencode-data-pvc
      imagePullSecrets:
      - name: xencode-registry-secret

---
apiVersion: v1
kind: Service
metadata:
  name: xencode-service
  namespace: xencode
  labels:
    app: xencode
    component: api
spec:
  selector:
    app: xencode
    component: api
  ports:
  - name: http
    port: 80
    targetPort: 8000
    protocol: TCP
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: xencode-ingress
  namespace: xencode
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
spec:
  tls:
  - hosts:
    - api.xencode.dev
    secretName: xencode-tls
  rules:
  - host: api.xencode.dev
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: xencode-service
            port:
              number: 80

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: xencode-logs-pvc
  namespace: xencode
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
  storageClassName: fast-ssd

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: xencode-data-pvc
  namespace: xencode
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 50Gi
  storageClassName: fast-ssd

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: xencode-hpa
  namespace: xencode
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: xencode-app
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80